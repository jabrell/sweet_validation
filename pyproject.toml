[project]
name = "sweet_validation"
version = "0.1.0"
description = "Validate data given frictionless schemas in a sweet way"
readme = "README.md"
authors = [
    { name = "Jan Abrell", email = "abrell@posteo.de" }
]
requires-python = ">=3.10"

dependencies = [
    "frictionless>=5.18.0",
    "numpy>=2.2.2",
    "pandas>=2.2.3",
    "pyyaml>=6.0.2",
    "sqlalchemy>=2.0.38",
    "types-pyyaml>=6.0.12.20241230",
]

[dependency-groups]
dev = [
    "mypy>=1.14.1",
    "pre-commit>=4.1.0",
    "pytest-cov>=6.0.0",
    "pytest>=8.3.4",
    "faker>=35.0.0",
]
docs = [
    "mkdocs-material>=9.6.2",
    "mkdocs>=1.6.1",
    "mkdocstrings[python]>=0.27.0",
]

[project.scripts]
sweetvalidation = "sweetvalidation:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = ["UP006"]  # Ignore "Use `type` instead of `Type`" warnings

# ignore = [
#     "E501",  # line too long, handled by black
#     "B008",  # do not perform function calls in argument defaults
#     "C901",  # too complex
#     "W191",  # indentation contains tabs
# ]

# 4. Ignore `E402` (import violations) in all `__init__.py` files, and in selected subdirectories.
[tool.ruff.lint.per-file-ignores]
    "__init__.py" = ["E402", "F401"]
    "**/{tests,docs,tools}/*" = ["E402"]

[tool.my-py]
strict = true
ignore_missing_imports = true
files = ["sweet-validation/"]
plugins = ["pydantic.mypy"]
exclude = ["*/tests/"]


[tool.coverage.run]
omit = [
    "*/__init__.py",  # Exclude all __init__.py files
    # Add other patterns if needed, e.g., "*/.venv/*", "*/tests/*", etc.
]

[tool.coverage.report]
exclude_also = [
    'pragma: no cover',
    'except NotImplementedError:',
    'raise NotImplementedError',
    'return NotImplemented'
]
